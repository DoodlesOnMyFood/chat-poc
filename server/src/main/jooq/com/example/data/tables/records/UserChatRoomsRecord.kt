/*
 * This file is generated by jOOQ.
 */
package com.example.`data`.tables.records


import java.util.UUID

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserChatRoomsRecord() : TableRecordImpl<UserChatRoomsRecord>(com.example.`data`.tables.UserChatRooms.USER_CHAT_ROOMS), Record2<String?, UUID?> {

    open var userId: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var chatRoomId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<String?, UUID?> = super.fieldsRow() as Row2<String?, UUID?>
    override fun valuesRow(): Row2<String?, UUID?> = super.valuesRow() as Row2<String?, UUID?>
    override fun field1(): Field<String?> = com.example.`data`.tables.UserChatRooms.USER_CHAT_ROOMS.USER_ID
    override fun field2(): Field<UUID?> = com.example.`data`.tables.UserChatRooms.USER_CHAT_ROOMS.CHAT_ROOM_ID
    override fun component1(): String? = userId
    override fun component2(): UUID? = chatRoomId
    override fun value1(): String? = userId
    override fun value2(): UUID? = chatRoomId

    override fun value1(value: String?): UserChatRoomsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: UUID?): UserChatRoomsRecord {
        set(1, value)
        return this
    }

    override fun values(value1: String?, value2: UUID?): UserChatRoomsRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised UserChatRoomsRecord
     */
    constructor(userId: String? = null, chatRoomId: UUID? = null): this() {
        this.userId = userId
        this.chatRoomId = chatRoomId
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised UserChatRoomsRecord
     */
    constructor(value: com.example.`data`.tables.pojos.UserChatRooms?): this() {
        if (value != null) {
            this.userId = value.userId
            this.chatRoomId = value.chatRoomId
            resetChangedOnNotNull()
        }
    }
}
